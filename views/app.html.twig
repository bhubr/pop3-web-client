<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="A layout example that shows off a responsive email layout.">
  <title>Email &ndash; Layout Examples &ndash; Pure</title>

  <link rel="stylesheet" href="/css/vendor/materialize.min.css">
<!--   <link rel="stylesheet" href="/css/styles.css"> -->
</head>
<body>
<body id="body">

  <div id="app">{{ markup|raw }}</div>

  <script>
  window.initialState = {{ state|raw }};
  </script>
  <script>

    /**
     * Stuff for older browsers
     */

    // Object.assign Polyfill
    if (typeof Object.assign != 'function') {
      // Must be writable: true, enumerable: false, configurable: true
      Object.defineProperty(Object, "assign", {
        value: function assign(target, varArgs) { // .length of function is 2
          'use strict';
          if (target == null) { // TypeError if undefined or null
            throw new TypeError('Cannot convert undefined or null to object');
          }

          var to = Object(target);

          for (var index = 1; index < arguments.length; index++) {
            var nextSource = arguments[index];

            if (nextSource != null) { // Skip over if undefined or null
              for (var nextKey in nextSource) {
                // Avoid bugs when hasOwnProperty is shadowed
                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                  to[nextKey] = nextSource[nextKey];
                }
              }
            }
          }
          return to;
        },
        writable: true,
        configurable: true
      });
    }

    // loadJS
    /*! loadJS: load a JS file asynchronously. [c]2014 @scottjehl, Filament Group, Inc. (Based on http://goo.gl/REQGQ by Paul Irish). Licensed MIT */
    (function( w ){
      var loadJS = function( src, cb ){
        "use strict";
        var ref = w.document.getElementsByTagName( "script" )[ 0 ];
        var script = w.document.createElement( "script" );
        script.src = src;
        script.async = true;
        ref.parentNode.insertBefore( script, ref );
        if (cb && typeof(cb) === "function") {
          script.onload = cb;
        }
        return script;
      };
      // commonjs
      if( typeof module !== "undefined" ){
        module.exports = loadJS;
      }
      else {
        w.loadJS = loadJS;
      }
    }( typeof global !== "undefined" ? global : this ));

    if(! window.fetch) {
      loadJS('https://raw.githubusercontent.com/github/fetch/master/fetch.js', function() {
        console.log('fetch polyfill loaded');
      })
    }
  </script>
  <script src="/js/vendor/jquery-3.3.1.js"></script>
  <script src="/js/vendor/materialize.min.js"></script>
  <script src="/js/dist/build.js"></script>

</body>
</html>
